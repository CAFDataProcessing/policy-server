<!--

    Copyright 2015-2018 Micro Focus or one of its affiliates.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
                    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <!-- 
        This is NOT needed here, rather it should be loaded by the root context. It will be loaded twice if it's here 
    -->
    <!--<import resource="classpath:corepolicy-beans.xml"/>-->

    <mvc:annotation-driven>
        <!--=====================
        This allows us to serialize Joda DateTimes correctly.
        ========================-->

        <mvc:message-converters register-defaults="false">
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" >
                <property name="objectMapper">
                    <bean class="com.github.cafdataprocessing.corepolicy.common.shared.CorePolicyObjectMapper"/>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/html;charset=UTF-8" />
            </bean>
        </mvc:message-converters>

    </mvc:annotation-driven>

    <mvc:default-servlet-handler/>

    <!-- Configures Handler Interceptors -->
    <mvc:interceptors>
        <!-- This bit of XML will intercept all URLs - which is what you want in a web app -->
        <bean class="com.github.cafdataprocessing.corepolicy.web.ProjectIdArgumentValidatorInterceptor" />
    </mvc:interceptors>

    <!-- 
        The servlet needs to know about any 'web based' annotations e.g. @Controller, so it needs to scan for them. 
        They are not required in the main core policy beans
     -->
    <context:component-scan base-package="com.github.cafdataprocessing.corepolicy.web" />

</beans>
